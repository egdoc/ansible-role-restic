--- 
- name: Ensure restic is installed
  ansible.builtin.package:
    name: restic
    state: present

- name: Ensure restic user exists
  ansible.builtin.user:
    name: restic
    shell: /sbin/nologin
    home: '{{ restic_home }}'
    password: '!'
    system: true
    comment: Restic backup user
    state: present

- name: Ensure configuration directory exists
  ansible.builtin.file:
    path: '{{ restic_config_dir }}'
    owner: root
    group: root
    state: directory
    mode: '700'

- name: Ensure repository password is written to file
  ansible.builtin.copy:
    dest: '{{ restic_config_dir }}/password'
    content: '{{ restic_password }}'
    owner: root
    group: root
    mode: '600'

- name: Ensure paths to backup are written to file
  ansible.builtin.copy:
    dest: '{{ restic_config_dir }}/files'
    content: "{{ [restic_files] | flatten | join('\n') }}"
    owner: root
    group: root
    mode: '644'

- name: Ensure exclusion patterns are written to file
  ansible.builtin.copy:
    dest: '{{ restic_config_dir }}/exclude_patterns'
    content: "{{ [restic_exclude_patterns] | flatten | join('\n') }}"
    owner: root
    group: root
    mode: '644'

- name: Ensure backup script is in place
  ansible.builtin.template:
    src: restic_backup.sh.j2
    dest: /usr/local/bin/restic_backup.sh
    owner: root
    group: root
    mode: '755'

- name: Ensure restic service exists
  ansible.builtin.copy:
    src: restic.service
    dest: /etc/systemd/system/restic.service
    owner: root
    group: root
    mode: '644'

- name: Ensure restic timer exists
  ansible.builtin.template:
    src: restic.timer.j2
    dest: /etc/systemd/system/restic.timer
    owner: root
    group: root
    mode: '644'

- name: Ensure restic timer is active and enabled
  ansible.builtin.systemd_service:
    name: restic.timer
    state: started
    enabled: true
    daemon_reload: true
